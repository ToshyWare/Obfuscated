  local StyxzHub = function()
local _wait = task.wait
repeat _wait() until game:IsLoaded()
local _env = getgenv and getgenv() or {}

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local Player = Players.LocalPlayer

local rs_Monsters = ReplicatedStorage:WaitForChild("MonsterSpawn")
local Modules = ReplicatedStorage:WaitForChild("ModuleScript")
local OtherEvent = ReplicatedStorage:WaitForChild("OtherEvent")
local Monsters = workspace:WaitForChild("Monster")

local MQuestSettings = require(Modules:WaitForChild("Quest_Settings"))
local MSetting = require(Modules:WaitForChild("Setting"))

local NPCs = workspace:WaitForChild("NPCs")
local Raids = workspace:WaitForChild("Raids")
local Location = workspace:WaitForChild("Location")
local Region = workspace:WaitForChild("Region")
local Island = workspace:WaitForChild("Island")

local Quests_Npc = NPCs:WaitForChild("Quests_Npc")
local EnemyLocation = Location:WaitForChild("Enemy_Location")
local QuestLocation = Location:WaitForChild("QuestLocaion")

local Items = Player:WaitForChild("Items")
local QuestFolder = Player:WaitForChild("QuestFolder")
local Ability = Player:WaitForChild("Ability")
local PlayerData = Player:WaitForChild("PlayerData")
local PlayerLevel = PlayerData:WaitForChild("Level")

local sethiddenproperty = sethiddenproperty or (function()end)

local CFrame_Angles = CFrame.Angles
local CFrame_new = CFrame.new
local Vector3_new = Vector3.new

local _huge = math.huge

task.spawn(function()
  if not _env.LoadedHideUsername then
    _env.LoadedHideUsername = true
    local Label = Player.PlayerGui.MainGui.PlayerName
    
    local function Update()
      local Level = PlayerLevel.Value
      local IsMax = Level >= MSetting.Setting.MaxLevel
      Label.Text = ("%s â€¢ Lv. %i%s"):format("Anonymous", Level, IsMax and " (Max)" or "")
    end
    
    Label:GetPropertyChangedSignal("Text"):Connect(Update)Update()
  end
end)

local Loaded, Funcs, Folders = {}, {}, {} do
  Loaded.ItemsPrice = {
    Aura = function()
      return Funcs:GetMaterial("Meme Cube") > 0 and Funcs:GetData("Money") >= 10000000 -- 1x Meme Cube, $10.000.000
    end,
    FlashStep = function()
      return Funcs:GetData("Money") >= 100000 -- $100.000
    end,
    Instinct = function()
      return Funcs:GetData("Money") >= 2500000 -- $2.500.000
    end
  }
  Loaded.Shop = {
    {"Weapons", {
      {"Buy Katana", "$5.000 Money", {"Weapon_Seller", "Doge"}},
      {"Buy Hanger", "$25.000 Money", {"Weapon_Seller", "Hanger"}},
      {"Buy Flame Katana", "1x Cheems Cola and $50.000", {"Weapon_Seller", "Cheems"}},
      {"Buy Banana", "1x Cat Food and $350.000", {"Weapon_Seller", "Smiling Cat"}},
      {"Buy Bonk", "5x Money Bags and $1.000.000", {"Weapon_Seller", "Meme Man"}},
      {"Buy Pumpkin", "1x Nugget Man and $3.500.000", {"Weapon_Seller", "Gravestone"}},
      {"Buy Popcat", "10.000 Pops Clicker", {"Weapon_Seller", "Ohio Popcat"}}
    }},
    {"Ability", {
      {"Buy Flash Step", "$100.000 Money", {"Ability_Teacher", "Giga Chad"}},
      {"Buy Instinct", "$2.500.000 Money", {"Ability_Teacher", "Nugget Man"}},
      {"Buy Aura", "1x Meme Cube and $10.000.000", {"Ability_Teacher", "Aura Master"}}
    }},
    {"Fighting Style", {
      {"Buy Combat", "$0 Money", {"FightingStyle_Teacher", "Maxwell"}},
      {"Buy Baller", "10x Balls and $10.000.000", {"FightingStyle_Teacher", "Baller"}}
    }}
  }
  Loaded.WeaponsList = { "Fight", "Power", "Weapon" }
  Loaded.EnemeiesList = {}
  Loaded.EnemiesSpawns = {}
  Loaded.EnemiesQuests = {}
  Loaded.Islands = {}
  Loaded.Quests = {}
  
  local function RedeemCode(Code)
    return OtherEvent.MainEvents.Code:InvokeServer(Code)
  end
  
  Funcs.RAllCodes = function(self)
    if Modules:FindFirstChild("CodeList") then
      local List = require(Modules.CodeList)
      for Code, Info in pairs(type(List) == "table" and List or {}) do
        if type(Code) == "string" and type(Info) == "table" and Info.Status then RedeemCode(Code) end
      end
    end
  end
  
  Funcs.GetPlayerLevel = function(self)
    return PlayerLevel.Value
  end
  
  Funcs.GetCurrentQuest = function(self)
    for _,Quest in pairs(Loaded.Quests) do
      if Quest.Level <= self:GetPlayerLevel() and not Quest.RaidBoss and not Quest.SpecialQuest then
        return Quest
      end
    end
  end
  
  Funcs.CheckQuest = function(self)
    for _,v in ipairs(QuestFolder:GetChildren()) do
      if v.Target.Value ~= "None" then
        return v
      end
    end
  end
  
  Funcs.VerifySword = function(self, SName)
    local Swords = Items.Weapon
    return Swords:FindFirstChild(SName) and Swords[SName].Value > 0
  end
  
  Funcs.VerifyAccessory = function(self, AName)
    local Accessories = Items.Accessory
    return Accessories:FindFirstChild(AName) and Accessories[AName].Value > 0
  end
  
  Funcs.GetMaterial = function(self, MName)
    local ItemStorage = Items.ItemStorage
    return ItemStorage:FindFirstChild(MName) and ItemStorage[MName].Value or 0
  end
  
  Funcs.AbilityUnlocked = function(self, Ablt)
    return Ability:FindFirstChild(Ablt) and Ability[Ablt].Value
  end
  
  Funcs.CanBuy = function(self, Item)
    if Loaded.ItemsPrice[Item] then
      return Loaded.ItemsPrice[Item]()
    end
    return false
  end
  
  Funcs.GetData = function(self, Data)
    return PlayerData:FindFirstChild(Data) and PlayerData[Data].Value or 0
  end
  
  for Npc,Quest in pairs(MQuestSettings) do
    if QuestLocation:FindFirstChild(Npc) then
      table.insert(Loaded.Quests, {
        RaidBoss = Quest.Raid_Boss,
        SpecialQuest = Quest.Special_Quest,
        QuestPos = QuestLocation[Npc].CFrame,
        EnemyPos = EnemyLocation[Quest.Target].CFrame,
        Level = Quest.LevelNeed,
        Enemy = Quest.Target,
        NpcName = Npc
      })
    end
  end
  
  table.sort(Loaded.Quests, function(a, b) return a.Level > b.Level end)
  for _,v in ipairs(Loaded.Quests) do
    table.insert(Loaded.EnemeiesList, v.Enemy)Loaded.EnemiesQuests[v.Enemy] = v.NpcName
  end
end

local Settings = Settings or {} do
  Settings.AutoStats_Points = 1
  Settings.BringMobs = true
  Settings.FarmDistance = 9
  Settings.ViewHitbox = false
  Settings.AntiAFK = true
  Settings.AutoHaki = true
  Settings.AutoClick = true
  Settings.ToolFarm = "Fight" -- [[ "Fight", "Power", "Weapon" ]]
  Settings.FarmCFrame = CFrame_new(0, Settings.FarmDistance, 0) * CFrame_Angles(math.rad(-90), 0, 0)
end

local function PlayerClick()
  local Char = Player.Character
  if Char then
    if Settings.AutoClick then
      VirtualUser:CaptureController()
      VirtualUser:Button1Down(Vector2.new(1e4, 1e4))
    end
    if Settings.AutoHaki and Char:FindFirstChild("AuraColor_Folder") and Funcs:AbilityUnlocked("Aura") then
      if #Char.AuraColor_Folder:GetChildren() < 1 then
        OtherEvent.MainEvents.Ability:InvokeServer("Aura")
      end
    end
  end
end

local function IsAlive(Char)
  local Hum = Char and Char:FindFirstChild("Humanoid")
  return Hum and Hum.Health > 0
end

local function GetNextEnemie(EnemieName)
  for _,v in ipairs(Monsters:GetChildren()) do
    if (not EnemieName or v.Name == EnemieName) and IsAlive(v) then
      return v
    end
  end
  return false
end

local function GoTo(CFrame, Move)
  local Char = Player.Character
  if IsAlive(Char) then
    return Move and ( Char:MoveTo(CFrame.p) or true ) or Char:SetPrimaryPartCFrame(CFrame)
  end
end

local function EquipWeapon()
  local Backpack, Char = Player:FindFirstChild("Backpack"), Player.Character
  if IsAlive(Char) and Backpack then
    for _,v in ipairs(Backpack:GetChildren()) do
      if v:IsA("Tool") and v.ToolTip:find(Settings.ToolFarm) then
        Char.Humanoid:EquipTool(v)
      end
    end
  end
end

local function BringMobsTo(_Enemie, CFrame, SBring)
  for _,v in ipairs(Monsters:GetChildren()) do
    if (SBring or v.Name == _Enemie) and IsAlive(v) then
      local PP, Hum = v.PrimaryPart, v.Humanoid
      if PP and (PP.Position - CFrame.p).Magnitude < 500 then
        Hum.WalkSpeed = 0
        Hum:ChangeState(14)
        PP.CFrame = CFrame
        PP.CanCollide = false
        PP.Transparency = Settings.ViewHitbox and 0.8 or 1
        PP.Size = Vector3.new(50, 50, 50)
      end
    end
  end
  return pcall(sethiddenproperty, Player, "SimulationRadius", _huge)
end

local function KillMonster(_Enemie, SBring)
  local Enemy = typeof(_Enemie) == "Instance" and _Enemie or GetNextEnemie(_Enemie)
  if IsAlive(Enemy) and Enemy.PrimaryPart then
    GoTo(Enemy.PrimaryPart.CFrame * Settings.FarmCFrame)EquipWeapon()
    if not Enemy:FindFirstChild("Reverse_Mark") then PlayerClick() end
    if Settings.BringMobs then BringMobsTo(_Enemie, Enemy.PrimaryPart.CFrame, SBring) end
    return true
  end
end

local function TakeQuest(QuestName, CFrame, Wait)
  local QuestGiver = Quests_Npc:FindFirstChild(QuestName)
  if QuestGiver and Player:DistanceFromCharacter(QuestGiver.WorldPivot.p) < 5 then
    return fireproximityprompt(QuestGiver.Block.QuestPrompt), _wait(Wait or 0.1)
  end
  GoTo(CFrame or QuestLocation[QuestName].CFrame)
end

local function ClearQuests(Ignore)
  for _,v in ipairs(QuestFolder:GetChildren()) do
    if v.QuestGiver.Value ~= Ignore and v.Target.Value ~= "None" then
      OtherEvent.QuestEvents.Quest:FireServer("Abandon_Quest", { QuestSlot = v.Name })
    end
  end
end

local function GetRaidEnemies()
  for _,v in ipairs(Monsters:GetChildren()) do
    if v:GetAttribute("Raid_Enemy") and IsAlive(v) then
      return v
    end
  end
end

local function GetRaidMap()
  for _,v in ipairs(Raids:GetChildren()) do
    if v.Joiners:FindFirstChild(Player.Name) then
      return v
    end
  end
end

local function VerifyQuest(QName)
  local Quest = Funcs:CheckQuest()
  return Quest and Quest.QuestGiver.Value == QName
end

_env.FarmFuncs = {
  {"_Floppa Sword", (function()
    if not Funcs:VerifySword("Floppa") then
      if VerifyQuest("Cool Floppa Quest") then
        GoTo(CFrame_new(794, -31, -440))
        fireproximityprompt(Island.FloppaIsland["Lava Floppa"].ClickPart.ProximityPrompt)
      else
        ClearQuests("Cool Floppa Quest")
        TakeQuest("Cool Floppa Quest", CFrame_new(758, -31, -424))
      end
      return true
    end
  end)},
  {"Meme Beast", (function()
    local MemeBeast = Monsters:FindFirstChild("Meme Beast") or rs_Monsters:FindFirstChild("Meme Beast")
    if MemeBeast then
      GoTo(MemeBeast.WorldPivot)EquipWeapon()PlayerClick()
      return true
    end
  end)},
  {"Lord Sus", (function()
    local LordSus = Monsters:FindFirstChild("Lord Sus") or rs_Monsters:FindFirstChild("Lord Sus")
    if LordSus then
      if not VerifyQuest("Floppa Quest 32") and Funcs:GetPlayerLevel() >= 1550 then
        ClearQuests("Floppa Quest 32")TakeQuest("Floppa Quest 32", nil, 1)
      else
        KillMonster(LordSus)
      end
      return true
    elseif Funcs:GetMaterial("Sussy Orb") > 0 then
      if Player:DistanceFromCharacter(Vector3_new(6644, -95, 4811)) < 5 then
        fireproximityprompt(Island.ForgottenIsland.Summon3.Summon.SummonPrompt)
      else GoTo(CFrame_new(6644, -95, 4811)) end
      return true
    end
  end)},
  {"Evil Noob", (function()
    local EvilNoob = Monsters:FindFirstChild("Evil Noob") or rs_Monsters:FindFirstChild("Evil Noob")
    if EvilNoob then
      if not VerifyQuest("Floppa Quest 29") and Funcs:GetPlayerLevel() >= 1400 then
        ClearQuests("Floppa Quest 29")TakeQuest("Floppa Quest 29", nil, 1)
      else
        KillMonster(EvilNoob)
      end
      return true
    elseif Funcs:GetMaterial("Noob Head") > 0 then
      if Player:DistanceFromCharacter(Vector3_new(-2356, -81, 3180)) < 5 then
        fireproximityprompt(Island.MoaiIsland.Summon2.Summon.SummonPrompt)
      else GoTo(CFrame_new(-2356, -81, 3180)) end
      return true
    end
  end)},
  {"Giant Pumpkin", (function()
    local Pumpkin = Monsters:FindFirstChild("Giant Pumpkin") or rs_Monsters:FindFirstChild("Giant Pumpkin")
    if Pumpkin then
      if not VerifyQuest("Floppa Quest 23") and Funcs:GetPlayerLevel() >= 1100 then
        ClearQuests("Floppa Quest 23")TakeQuest("Floppa Quest 23", nil, 1)
      else
        KillMonster(Pumpkin)
      end
      return true
    elseif Funcs:GetMaterial("Flame Orb") > 0 then
      if Player:DistanceFromCharacter(Vector3_new(-1180, -93, 1462)) < 5 then
        fireproximityprompt(Island.PumpkinIsland.Summon1.Summon.SummonPrompt)
      else GoTo(CFrame_new(-1180, -93, 1462)) end
      return true
    end
  end)},
  {"Race V2 Orb", (function()
    if Funcs:GetPlayerLevel() >= 500 then
      local Quest, Enemy = "Dancing Banana Quest", "Sogga"
      if VerifyQuest(Quest) then
        if KillMonster(Enemy) then else GoTo(EnemyLocation[Enemy].CFrame) end
      else ClearQuests(Quest)TakeQuest(Quest, CFrame_new(-2620, -80, -2001)) end
      return true
    end
  end)},
  {"Level Farm", (function()
    local Quest, QuestChecker = Funcs:GetCurrentQuest(), Funcs:CheckQuest()
    if Quest then
      if QuestChecker then
        local _QuestName = QuestChecker.QuestGiver.Value
        if _QuestName == Quest.NpcName then
          if KillMonster(Quest.Enemy) then else GoTo(Quest.EnemyPos) end
        else
          if KillMonster(QuestChecker.Target.Value) then else GoTo(QuestLocation[_QuestName].CFrame) end
        end
      else TakeQuest(Quest.NpcName) end
    end
    return true
  end)},
  {"Raid Farm", (function()
    if Funcs:GetPlayerLevel() >= 1000 then
      local RaidMap = GetRaidMap()
      if RaidMap then
        if RaidMap:GetAttribute("Starting") ~= 0 then
          OtherEvent.MiscEvents.StartRaid:FireServer("Start")_wait(1)
        else
          local Enemie = GetRaidEnemies()
          if Enemie then KillMonster(Enemie, true) else
            local Spawn = RaidMap:FindFirstChild("Spawn_Location")
            if Spawn then GoTo(Spawn.CFrame) end
          end
        end
      else
        local Raid = Region:FindFirstChild("RaidArea")
        if Raid then GoTo(CFrame_new(Raid.Position)) end
      end
      return true
    end
  end)},
  {"FS Enemie", (function()
    local Enemy = _env.SelecetedEnemie
    local Quest = Loaded.EnemiesQuests[Enemy]
    if VerifyQuest(Quest) or not _env["FS Take Quest"] then
      if KillMonster(Enemy) then else GoTo(EnemyLocation[Enemy].CFrame) end
    else ClearQuests(Quest)TakeQuest(Quest) end
    return true
  end)},
  {"Nearest Farm", (function() return KillMonster(GetNextEnemie()) end)}
}

if not _env.LoadedFarm then
  _env.LoadedFarm = true
  task.spawn(function()
    while _wait() do
      for _,f in _env.FarmFuncs do
        if _env[f[1]] then local s,r=pcall(f[2])if s and r then break end;end
      end
    end
  end)
end

local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/meobeo8/Library/retard/ElgatoUi.lua"))()
local NotificationLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/IceMinisterq/Notification-Library/Main/Library.lua"))()
local Window = redzlib:MakeWindow({ Title = "Styxz X | Meme Sea", SubTitle = "[ Beta Version ]", SaveFolder = "StyxzHub-MemeSea.json" })
Window:AddMinimizeButton({
  Button = { Image = "rbxassetid://113370527751358", BackgroundTransparency = 0 },
  Corner = { CornerRadius = UDim.new(0, 6) }
})

local Tabs = {
  Info = Window:MakeTab({"Discord", "Info"}),
  MainFarm = Window:MakeTab({"Farm", "Home"}),
  Items = Window:MakeTab({"Items", "Swords"}),
  Stats = Window:MakeTab({"Stats", "Signal"}),
  Teleport = Window:MakeTab({"Teleport", "Locate"}),
  Shop = Window:MakeTab({"Shop", "ShoppingCart"}),
  Misc = Window:MakeTab({"Misc", "Settings"})
}

Window:SelectTab(Tabs.MainFarm)

local function AddToggle(Tab, Settings, Flag)
  Settings.Description = type(Settings[2]) == "string" and Settings[2]
  Settings.Default = type(Settings[2]) ~= "string" and Settings[2]
  Settings.Flag = Settings.Flag or Flag
  Settings.Callback = function(Value) _env[Settings.Flag] = Value end
  Tab:AddToggle(Settings)
end

local _Info = Tabs.Info do
 _Info:AddDiscordInvite({
  Name = "Styxz X | Community",
  Description = "Join Our Discord For Suggestions and Updates!",
  Logo = "rbxassetid://74197694724872",
  Invite = "https://discord.gg/9PySCJxr9a"
})

_Info:AddParagraph({"Script Developed By : StyxzWare", ""})

_Info:AddParagraph({"Device Support : Mobile", ""})
end

local _MainFarm = Tabs.MainFarm do
  _MainFarm:AddDropdown({"Farm Tool", Loaded.WeaponsList, Settings.ToolFarm, function(Value)
    Settings.ToolFarm = Value
  end, "Main/FarmTool"})
  _MainFarm:AddSection("Farm")
  AddToggle(_MainFarm, {"Auto Farm Level", ("MaxLevel: %i"):format(MSetting.Setting.MaxLevel)}, "Level Farm")
  AddToggle(_MainFarm, {"Auto Farm Nearest"}, "Nearest Farm")
  _MainFarm:AddSection("Enemies")
  _MainFarm:AddDropdown({"Select Enemie", Loaded.EnemeiesList, {Loaded.EnemeiesList[1]}, function(Value)
    _env.SelecetedEnemie = Value
  end, "Main/SEnemy"})
  AddToggle(_MainFarm, {"Auto Farm Selected"}, "FS Enemie")
  AddToggle(_MainFarm, {"Take Quest [ Enemie Selected ]", true}, "FS Take Quest")
  _MainFarm:AddSection("Boss Farm")
  AddToggle(_MainFarm, {"Auto Meme Beast [ Spawns every 30 Minutes ]", "Drops: Portal ( <25% ), Meme Cube ( <50% )"}, "Meme Beast")
  _MainFarm:AddSection("Raid")
  AddToggle(_MainFarm, {"Auto Farm Raid", "Req: Level 1000"}, "Raid Farm")
end

local _Items = Tabs.Items do
  _Items:AddSection("Powers")
  _Items:AddButton({"Reroll Powers 10X [ 250k Money ]", function()
    OtherEvent.MainEvents.Modules:FireServer("Random_Power", {
      Type = "Decuple",
      NPCName = "Floppa Gacha",
      GachaType = "Money"
    })
  end})
  _Items:AddToggle({"Auto Store Powers", false, function(Value)
    _env.AutoStorePowers = Value
    while _env.AutoStorePowers do _wait()
      for _,v in ipairs(Player.Backpack:GetChildren()) do
        if v:IsA("Tool") and v.ToolTip == "Power" and v:GetAttribute("Using") == nil then
          v.Parent = Player.Character
          OtherEvent.MainEvents.Modules:FireServer("Eatable_Power", { Action = "Store", Tool = v })
        end
      end
    end
  end, "AutoStore"})
  _Items:AddSection("Aura Color")
  _Items:AddButton({"Reroll Aura Color [ 10 Gems ]", function()
    OtherEvent.MainEvents.Modules:FireServer("Reroll_Color", "Halfed Sorcerer")
  end})
  _Items:AddSection("Bosses")
  AddToggle(_Items, {"Auto Giant Pumpkin", "Drops: Pumpkin Head ( <10% ), Nugget Man ( <25% )"}, "Giant Pumpkin")
  AddToggle(_Items, {"Auto Evil Noob", "Drops: Yellow Blade ( <5% ), Noob Friend ( <10% )"}, "Evil Noob")
  AddToggle(_Items, {"Auto Lord Sus", "Drops: Purple Sword ( <5% ), Sus Pals ( <10% )"}, "Lord Sus")
  _Items:AddSection("Race")
  AddToggle(_Items, {"Auto Awakening Orb", "Req: Level 500"}, "Race V2 Orb")
  _Items:AddSection("Weapons")
  AddToggle(_Items, {"Auto Floppa [ Exclusive Sword ]"}, "_Floppa Sword")
  _Items:AddSection("Popcat")
  _Items:AddToggle({"Auto Popcat", false, function(Value)
    _env.AutoPopcat = Value
    local ClickDetector = Island.FloppaIsland.Popcat_Clickable.Part.ClickDetector
    local Heartbeat = RunService.Heartbeat
    if Value then GoTo(CFrame_new(400, -37, -588)) end
    
    while _env.AutoPopcat do Heartbeat:Wait()
      fireclickdetector(ClickDetector)
    end
  end, "AutoPopcat"})
end

local _Stats = Tabs.Stats do
  local StatsName, SelectedStats = {
    ["Power"] = "MemePowerLevel", ["Health"] = "DefenseLevel",
    ["Weapon"] = "SwordLevel", ["Melee"] = "MeleeLevel"
  }, {}
  
  _Stats:AddSlider({"Select Points", 1, 100, Settings.AutoStats_Points, 1, function(Value)
    Settings.AutoStats_Points = Value
  end, "Stats/SelectPoints"})
  _Stats:AddToggle({"Auto Stats", false, function(Value)
    _env.AutoStats = Value
    local _Points = PlayerData.SkillPoint
    while _env.AutoStats do _wait(0.5)
      for _,Stats in pairs(SelectedStats) do
        local _p, _s = _Points.Value, PlayerData[StatsName[_]]
        if Stats and _p > 0 and _s.Value < MSetting.Setting.MaxLevel then
          OtherEvent.MainEvents.StatsFunction:InvokeServer({
            ["Target"] = StatsName[_],
            ["Action"] = "UpgradeStats",
            ["Amount"] = math.clamp(Settings.AutoStats_Points, 0, MSetting.Setting.MaxLevel - _s.Value)
          })
        end
      end
    end
  end})
  _Stats:AddSection("Select Stats")
  for _,v in next, StatsName do
    _Stats:AddToggle({_, false, function(Value)
      SelectedStats[_] = Value
    end, "Stats_" .. _})
  end
end

local _Teleport = Tabs.Teleport do
  _Teleport:AddSection("Teleport")
  _Teleport:AddDropdown({"Islands", Location:WaitForChild("SpawnLocations"):GetChildren(), {}, function(Value)
    GoTo(Location.SpawnLocations[Value].CFrame)
  end})
  _Teleport:AddDropdown({"Quests", Location:WaitForChild("QuestLocaion"):GetChildren(), {}, function(Value)
    GoTo(Location.QuestLocaion[Value].CFrame)
  end})
end

local _Shop = Tabs.Shop do
  _Shop:AddSection("Auto Buy")
  _Shop:AddToggle({"Auto Buy Abilities", false, function(Value)
    _env.AutoBuyAbility = Value
    while _env.AutoBuyAbility do  _wait(1)
      if not Funcs:AbilityUnlocked("Instinct") and Funcs:CanBuy("Instinct") then
        OtherEvent.MainEvents.Modules:FireServer("Ability_Teacher", "Nugget Man")
      elseif not Funcs:AbilityUnlocked("FlashStep") and Funcs:CanBuy("FlashStep") then
        OtherEvent.MainEvents.Modules:FireServer("Ability_Teacher", "Giga Chad")
      elseif not Funcs:AbilityUnlocked("Aura") and Funcs:CanBuy("Aura") then
        OtherEvent.MainEvents.Modules:FireServer("Ability_Teacher", "Aura Master")
      else wait(3) end
    end
  end, "Auto Buy Ability", Desc = "Aura, Instinct & Flash Step"})
  
  for _,s in next, Loaded.Shop do
    _Shop:AddSection({s[1]})
    for _,item in pairs(s[2]) do
      local buyfunc = item[3]
      if type(buyfunc) == "table" then
        buyfunc = function()
          OtherEvent.MainEvents.Modules:FireServer(unpack(item[3]))
        end
      end
      
      _Shop:AddButton({item[1], buyfunc, Desc = item[2]})
    end
  end
end

local _Misc = Tabs.Misc do
  _Misc:AddButton({"Redeem All Codes", Funcs.RAllCodes})
  _Misc:AddSection("Settings")
  _Misc:AddSlider({"Farm Distance", 5, 15, 1, 8, function(Value)
    Settings.FarmDistance = Value or 8
    Settings.FarmCFrame = CFrame_new(0, Value or 8, 0) * CFrame_Angles(math.rad(-90), 0, 0)
  end, "Farm Distance"})
  _Misc:AddToggle({"Auto Aura", Settings.AutoHaki, function(Value) Settings.AutoHaki = Value end, "Auto Haki"})
  _Misc:AddToggle({"Auto Attack", Settings.AutoClick, function(Value) Settings.AutoClick = Value end, "Auto Attack"})
  _Misc:AddToggle({"Bring Mobs", Settings.BringMobs, function(Value) Settings.BringMobs = Value end, "Bring Mobs"})
  _Misc:AddToggle({"Anti AFK", Settings.AntiAFK, function(Value) Settings.AntiAFK = Value end, "Anti AFK"})
  _Misc:AddSection("Team")
  _Misc:AddButton({"Join Cheems Team", function()
    OtherEvent.MainEvents.Modules:FireServer("Change_Team", "Cheems Recruiter")
  end})
  _Misc:AddButton({"Join Floppa Team", function()
    OtherEvent.MainEvents.Modules:FireServer("Change_Team", "Floppa Recruiter")
  end})
  _Misc:AddSection("Others")
  _Misc:AddToggle({"Remove Notifications", false, function(Value)
    Player.PlayerGui.AnnounceGui.Enabled = not Value
  end, "Remove Notifications"})
end

task.spawn(function()
  if not _env.AntiAfk then
    _env.AntiAfk = true
    
    while _wait(60*10) do
      if Settings.AntiAFK then
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
      end
    end
  end
end)
NotificationLibrary:SendNotification("Success", "Script Has Been Loaded", 15)
end
local CoreGui = game:GetService("CoreGui")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Keysystem = Instance.new("ScreenGui")
local nhaidkey = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local closebutton = Instance.new("TextButton")
local UITextSizeConstraint = Instance.new("UITextSizeConstraint")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local txbox = Instance.new("TextBox")
local UICorner_2 = Instance.new("UICorner")
local ImageLabel = Instance.new("ImageLabel")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
local UITextSizeConstraint_2 = Instance.new("UITextSizeConstraint")
local dcbutton = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
local UITextSizeConstraint_3 = Instance.new("UITextSizeConstraint")
local get = Instance.new("TextButton")
local UICorner_4 = Instance.new("UICorner")
local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
local UITextSizeConstraint_4 = Instance.new("UITextSizeConstraint")
local check = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local UITextSizeConstraint_5 = Instance.new("UITextSizeConstraint")
local UIAspectRatioConstraint_6 = Instance.new("UIAspectRatioConstraint")
local logo = Instance.new("ImageLabel")
local UICorner_6 = Instance.new("UICorner")
local Toshylabel = Instance.new("TextLabel")
local UIAspectRatioConstraint_7 = Instance.new("UIAspectRatioConstraint")
local UITextSizeConstraint_6 = Instance.new("UITextSizeConstraint")
local UIAspectRatioConstraint_8 = Instance.new("UIAspectRatioConstraint")
local UIAspectRatioConstraint_9 = Instance.new("UIAspectRatioConstraint")
local UIAspectRatioConstraint_10 = Instance.new("UIAspectRatioConstraint")
local NotificationLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/IceMinisterq/Notification-Library/Main/Library.lua"))()

--! Draggable
local function makeDraggable(object, dragObject, enableTaptic, tapticOffset)
    local dragging = false
    local relative = nil
    local offset = Vector2.zero

    local screenGui = object:FindFirstAncestorWhichIsA("ScreenGui")
    if screenGui and screenGui.IgnoreGuiInset then
        offset = game:GetService('GuiService'):GetGuiInset()
    end

    dragObject.InputBegan:Connect(function(input, processed)
        if processed then return end
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            relative = object.AbsolutePosition + object.AbsoluteSize * object.AnchorPoint - UserInputService:GetMouseLocation()
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
            dragging = false
        end
    end)

    RunService.RenderStepped:Connect(function()
        if dragging then
            local position = UserInputService:GetMouseLocation() + relative + offset
            if enableTaptic and tapticOffset then
                TweenService:Create(object, TweenInfo.new(0.4, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {Position = UDim2.fromOffset(position.X, position.Y)}):Play()
            else
                object.Position = UDim2.fromOffset(position.X, position.Y)
            end
        end
    end)

    object.Destroying:Connect(function()
        dragging = false
    end)
end

--Properties:
Keysystem.Name = "Key system"
Keysystem.Parent = game.CoreGui
Keysystem.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

nhaidkey.Name = "nhaidkey"
nhaidkey.Parent = Keysystem
nhaidkey.AnchorPoint = Vector2.new(0.5, 0.5)
nhaidkey.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
nhaidkey.BorderColor3 = Color3.fromRGB(0, 0, 0)
nhaidkey.BorderSizePixel = 0
nhaidkey.Position = UDim2.new(0.5, 0, -1.5, 0)
nhaidkey.Size = UDim2.new(0.5, 0, 0.6, 0)
makeDraggable(nhaidkey, nhaidkey, true, 0)

local tween = game:GetService("TweenService"):Create(nhaidkey, TweenInfo.new(0.45, Enum.EasingStyle.Linear), {Position = UDim2.new(0.5, 0, 0.5, 0)})

tween:Play()

pcall(function()
    OldInstance:Destroy()
end)

if gethui then
    Keysystem.Parent = gethui()
else
    Keysystem.Parent = game.CoreGui
end

getgenv().OldInstance = Keysystem

UICorner.CornerRadius = UDim.new(0, 25)
UICorner.Parent = nhaidkey

closebutton.Name = "closebutton"
closebutton.Parent = nhaidkey
closebutton.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
closebutton.BackgroundTransparency = 1.000
closebutton.BorderColor3 = Color3.fromRGB(0, 0, 0)
closebutton.BorderSizePixel = 0
closebutton.Position = UDim2.new(0.894061029, 0, 0.0258899685, 0)
closebutton.Size = UDim2.new(0.0936329588, 0, 0.161812291, 0)
closebutton.Font = Enum.Font.SourceSansBold
closebutton.Text = "x"
closebutton.TextColor3 = Color3.fromRGB(255, 0, 4)
closebutton.TextScaled = true
closebutton.TextSize = 45.000
closebutton.TextWrapped = true

UITextSizeConstraint.Parent = closebutton
UITextSizeConstraint.MaxTextSize = 45

UIAspectRatioConstraint.Parent = closebutton
UIAspectRatioConstraint.AspectRatio = 1.000

txbox.Name = "txbox"
txbox.Parent = nhaidkey
txbox.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
txbox.BorderColor3 = Color3.fromRGB(0, 0, 0)
txbox.BorderSizePixel = 0
txbox.Position = UDim2.new(0.0751283318, 0, 0.511849105, 0)
txbox.Size = UDim2.new(0.852059901, 0, 0.161812291, 0)
txbox.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
txbox.Text = "Insert Key..."
txbox.TextColor3 = Color3.fromRGB(255, 255, 255)
txbox.TextScaled = true
txbox.TextSize = 16.000
txbox.TextWrapped = true

UICorner_2.Parent = txbox

ImageLabel.Parent = txbox
ImageLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
ImageLabel.BackgroundTransparency = 1.000
ImageLabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
ImageLabel.BorderSizePixel = 0
ImageLabel.Position = UDim2.new(0.0155902002, 0, 0, 0)
ImageLabel.Size = UDim2.new(0.114285715, 0, 1.00000012, 0)
ImageLabel.Image = "http://www.roblox.com/asset/?id=14829981187"

UIAspectRatioConstraint_2.Parent = ImageLabel
UIAspectRatioConstraint_2.AspectRatio = 1.040

UIAspectRatioConstraint_3.Parent = txbox
UIAspectRatioConstraint_3.AspectRatio = 9.100

UITextSizeConstraint_2.Parent = txbox
UITextSizeConstraint_2.MaxTextSize = 14

dcbutton.Name = "dcbutton"
dcbutton.Parent = nhaidkey
dcbutton.BackgroundColor3 = Color3.fromRGB(20, 160, 255)
dcbutton.BorderColor3 = Color3.fromRGB(0, 0, 0)
dcbutton.BorderSizePixel = 0
dcbutton.Position = UDim2.new(0.0262395162, 0, 0.809061468, 0)
dcbutton.Size = UDim2.new(0.340823978, 0, 0.145631075, 0)
dcbutton.Font = Enum.Font.SourceSansSemibold
dcbutton.Text = "Discord"
dcbutton.TextColor3 = Color3.fromRGB(255, 255, 255)
dcbutton.TextScaled = true
dcbutton.TextSize = 25.000
dcbutton.TextWrapped = true

UICorner_3.Parent = dcbutton

UIAspectRatioConstraint_4.Parent = dcbutton
UIAspectRatioConstraint_4.AspectRatio = 4.044

UITextSizeConstraint_3.Parent = dcbutton
UITextSizeConstraint_3.MaxTextSize = 25

get.Name = "get"
get.Parent = nhaidkey
get.BackgroundColor3 = Color3.fromRGB(80, 0, 200)
get.BorderColor3 = Color3.fromRGB(0, 0, 0)
get.BorderSizePixel = 0
get.Position = UDim2.new(0.695913136, 0, 0.809061468, 0)
get.Size = UDim2.new(0.277153552, 0, 0.145631075, 0)
get.Font = Enum.Font.SourceSansSemibold
get.Text = "GetKey"
get.TextColor3 = Color3.fromRGB(255, 255, 255)
get.TextScaled = true
get.TextSize = 25.000
get.TextWrapped = true

UICorner_4.Parent = get

UIAspectRatioConstraint_5.Parent = get
UIAspectRatioConstraint_5.AspectRatio = 3.289

UITextSizeConstraint_4.Parent = get
UITextSizeConstraint_4.MaxTextSize = 25

check.Name = "check"
check.Parent = nhaidkey
check.BackgroundColor3 = Color3.fromRGB(80, 0, 200)
check.BorderColor3 = Color3.fromRGB(0, 0, 0)
check.BorderSizePixel = 0
check.Position = UDim2.new(0.389996707, 0, 0.809061468, 0)
check.Size = UDim2.new(0.277153552, 0, 0.145631075, 0)
check.Font = Enum.Font.SourceSansSemibold
check.Text = "Submit"
check.TextColor3 = Color3.fromRGB(255, 255, 255)
check.TextScaled = true
check.TextSize = 25.000
check.TextWrapped = true

UICorner_5.Parent = check

UITextSizeConstraint_5.Parent = check
UITextSizeConstraint_5.MaxTextSize = 25

UIAspectRatioConstraint_6.Parent = check
UIAspectRatioConstraint_6.AspectRatio = 3.289

logo.Name = "logo"
logo.Parent = nhaidkey
logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
logo.BorderColor3 = Color3.fromRGB(0, 0, 0)
logo.BorderSizePixel = 0
logo.Position = UDim2.new(0.0749063641, 0, 0.132686079, 0)
logo.Size = UDim2.new(0.170411989, 0, 0.29126215, 0)
logo.Image = "rbxassetid://74197694724872"

UICorner_6.CornerRadius = UDim.new(0, 9)
UICorner_6.Parent = logo

Toshylabel.Name = "Toshy label"
Toshylabel.Parent = logo
Toshylabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Toshylabel.BackgroundTransparency = 1.000
Toshylabel.BorderColor3 = Color3.fromRGB(0, 0, 0)
Toshylabel.BorderSizePixel = 0
Toshylabel.Position = UDim2.new(1.22331107, 0, -0.0935373828, 0)
Toshylabel.Size = UDim2.new(3.33040619, 0, 1.29319584, 0)
Toshylabel.FontFace = Font.new("rbxasset://fonts/families/GothamSSm.json", Enum.FontWeight.Bold, Enum.FontStyle.Normal)
Toshylabel.Text = "Styxz X"
Toshylabel.TextColor3 = Color3.fromRGB(255, 255, 255)
Toshylabel.TextScaled = true
Toshylabel.TextSize = 100.000
Toshylabel.TextWrapped = true

UIAspectRatioConstraint_7.Parent = Toshylabel
UIAspectRatioConstraint_7.AspectRatio = 2.874

UITextSizeConstraint_6.Parent = Toshylabel

UIAspectRatioConstraint_8.Parent = logo
UIAspectRatioConstraint_8.AspectRatio = 1.011

UIAspectRatioConstraint_9.Parent = nhaidkey
UIAspectRatioConstraint_9.AspectRatio = 1.728

UIAspectRatioConstraint_10.Parent = Keysystem
UIAspectRatioConstraint_10.AspectRatio = 1.813

local ServiceID = "styxz"
local FileDirectory = "StyxzKey.txt"
local KeyPrefix = "Styxz" -- your key prefix

--! Secure Request & FakeKey
local function SecureRequest(url)
    local http = http_request or request
    if not http then
        print("http is not avalible!")
        return nil
    end

    local success, result = pcall(function()
        return http({
            Url = url,
            Method = "GET"
        })
    end)

    if success and result.Body then
        return result.Body
    else
        return nil
    end
end

local function __Init()
    local randomString = HttpService:GenerateGUID(false)
    randomString = randomString:gsub("-", "")
    return KeyPrefix .. randomString
end

-- Validation
local function validateKey(key)
    local playerService = cloneref(game:GetService("Players"))
    local httpService = cloneref(game:GetService("HttpService"))
    local playerID = playerService.LocalPlayer.UserId

    local serverURL = "https://pandadevelopment.net/v2_validation?key="..key.."&service="..ServiceID.."&hwid="..playerID
    
    local success, dataFetch = pcall(function()
        return SecureRequest(serverURL)
    end)
    
    if not success or not dataFetch then
        NotificationLibrary:SendNotification("Error", "Failed To Fetch Validation Data. Please Try Again.", 3)
        return false, false
    end

    local successDecode, jsonData = pcall(function()
        return httpService:JSONDecode(dataFetch)
    end)
    
    if not successDecode or not jsonData then
        NotificationLibrary:SendNotification("Error", "Failed To Process Validation Data. Please Check The Key.", 3)
        return false, false
    end

    if jsonData["V2_Authentication"] == "success" then
        local isPremium = jsonData["Key_Information"]["Premium_Mode"]
        NotificationLibrary:SendNotification("Info", "Validating User Key...", 2)
        NotificationLibrary:SendNotification("Info", "Key Expires At: " .. jsonData["Key_Information"]["expiresAt"], 3)
        return true, isPremium
    else
        return false, false
    end
end

local function Close()
    pcall(function()
        game:GetService("TweenService"):Create(nhaidkey, TweenInfo.new(0.45, Enum.EasingStyle.Linear), {Position = UDim2.new(0.5, 0, -1.5, 0)}):Play()
        task.wait(0.45)
        nhaidkey:Destroy()
    end)
end

local function VaqValidation(key)
    local keyManager = tostring(key)

    if not keyManager or keyManager == "" then
        if isfile(FileDirectory) then
            delfile(FileDirectory)
        end
        NotificationLibrary:SendNotification("Info", "File Or Input Is Nil", 3)
        return
    end

    task.wait(0.5)

    local ReqKey, isPremium = validateKey(__Init())
    __FC2AA, isPremium = validateKey(keyManager)

    if ReqKey or getgenv().Method then
        game.Players.LocalPlayer:Kick("Tampering Detected! ")
        task.wait(3)
        while true do end
    elseif __FC2AA then
        if isPremium then
          Close()
         StyxzHub()
            -- premium script
        else
          Close()
         StyxzHub()
            --! normal script
        end
        NotificationLibrary:SendNotification("Success", "USER IS" .. (isPremium and " " or " NOT ") .. "PREMIUM", 3)
        if not isfile(FileDirectory) then writefile(FileDirectory, keyManager) end
        Close()
    else
        NotificationLibrary:SendNotification("Error", "Authentication Failed. Invalid Key.", 3)
        if isfile(FileDirectory) then delfile(FileDirectory) end
        SavedKey = false
        return
    end
end

closebutton.MouseButton1Click:Connect(function()
    Close()
end)

dcbutton.MouseButton1Click:Connect(function() -- Discord Button
    setclipboard("https://dsc.gg/styxz") -- your discord server
    NotificationLibrary:SendNotification("Success", "Discord Link Copied To Clipboard.", 2)
end)

get.MouseButton1Click:Connect(function()
    local Meow = cloneref(game:GetService("Players"))
    setclipboard("https://pandadevelopment.net/getkey?service="..ServiceID.."&hwid="..Meow.LocalPlayer.UserId)
    NotificationLibrary:SendNotification("Info", "Get Key link Copied To Clipboard.", 2)
end)

if isfile(FileDirectory) then
    local savedKey = readfile(FileDirectory)
    SavedKey = true
    VaqValidation(savedKey)
end

local lastClickTime = 0
local cooldownTime = 4

check.MouseButton1Click:Connect(function()
    if SavedKey then
        NotificationLibrary:SendNotification("Error", "Currently Checking Saved Key", 2)
        return
    end

    local currentTime = os.clock()
    if currentTime - lastClickTime >= cooldownTime then
        lastClickTime = currentTime
        VaqValidation(txbox.Text)
        
        task.spawn(function()
            local remainingTime = cooldownTime
            while remainingTime > 0 do
                check.Text = string.format("OnCooldown %.1f", remainingTime)
                task.wait(0.1)
                remainingTime = cooldownTime - (os.clock() - lastClickTime)
            end
            check.Text = "Check Key"
        end)
    end
end
)

--[[
  Almocei o Myter, Jantei o Myter
  Hyper Foi a Sobremesa
]]--


